<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${packagePrefix}.dao.${table.classNameCapCase}Dao">

  <resultMap id="BaseResultMap" type="${packagePrefix}.domain.${table.classNameCapCase}">
#foreach($column in $columns)
#if($column.columnKey == 'PRI')
    <id column="${column.columnName}" jdbcType="${column.dataType.toUpperCase()}" property="${column.propertyNameLowCase}" />
#else
    <result column="${column.columnName}" jdbcType="${column.dataType.toUpperCase()}" property="${column.propertyNameLowCase}" />
#end
#end
  </resultMap>

  <sql id="Base_Column_List">
    #foreach($column in $columns)`$column.columnName`#if($velocityCount != $columns.size()),#end#end

  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ${table.tableName}
    where ${primaryKey.columnName} = #{${primaryKey.propertyNameLowCase},jdbcType=${primaryKey.dataType.toUpperCase()}}
  </select>

  <select id="list" resultType="${packagePrefix}.domain.${table.classNameCapCase}">
    select
    <include refid="Base_Column_List" />
    from ${table.tableName}
    <where>
#foreach($column in $columns)
      <if test="${table.classNameLowCase}QueryRequest.${column.propertyNameLowCase} != null">and ${column.columnName} = #{${table.classNameLowCase}QueryRequest.${column.propertyNameLowCase}}</if>
#end
    </where>
  </select>

  <delete id="deleteByPrimaryKey">
    delete from ${table.tableName}
    where ${primaryKey.columnName} = #{${primaryKey.propertyNameLowCase},jdbcType=${primaryKey.dataType.toUpperCase()}}
  </delete>

  <insert id="insert" parameterType="${packagePrefix}.domain.${table.classNameCapCase}">
    insert into ${table.tableName} (
#foreach($column in $columns)
    `$column.columnName`#if($velocityCount != $columns.size()),#end

#end
    ) values (
#foreach($column in $columns)
     #{${column.propertyNameLowCase},jdbcType=${column.dataType.toUpperCase()}}#if($velocityCount != $columns.size()),#end

#end
    )
  </insert>

  <insert id="insertSelective" parameterType="${packagePrefix}.domain.${table.classNameCapCase}" #if($primaryKey.extra == 'auto_increment')useGeneratedKeys="true" keyProperty="${primaryKey.propertyNameLowCase}"#end>
    insert into ${table.tableName}
    <trim prefix="(" suffix=")" suffixOverrides=",">
#foreach($column in $columns)
      <if test="${column.propertyNameLowCase} != null">
        ${column.columnName},
      </if>
#end
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
#foreach($column in $columns)
      <if test="${column.propertyNameLowCase} != null">
        #{${column.propertyNameLowCase},jdbcType=${column.dataType.toUpperCase()}}#if($velocityCount != $columns.size()),#end

      </if>
#end
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="${packagePrefix}.domain.${table.classNameCapCase}">
    update ${table.tableName}
    <set>
#foreach($column in $columns)
#if($column.columnKey != 'PRI')
      <if test="${column.propertyNameLowCase} != null">
        ${column.columnName} = #{${column.propertyNameLowCase},jdbcType=${column.dataType.toUpperCase()}},
      </if>
#end
#end
    </set>
    where ${primaryKey.columnName} = #{${primaryKey.propertyNameLowCase},jdbcType=${primaryKey.dataType.toUpperCase()}}
  </update>

  <update id="updateByPrimaryKey" parameterType="${packagePrefix}.domain.${table.classNameCapCase}">
    update ${table.tableName}
    set #foreach($column in $columns)#if($column.columnKey != 'PRI')${column.columnName} = #{${column.propertyNameLowCase},jdbcType=${column.dataType.toUpperCase()}}#if($velocityCount != $columns.size()),#end#end#end

    where ${primaryKey.columnName} = #{${primaryKey.propertyNameLowCase},jdbcType=${primaryKey.dataType.toUpperCase()}}
  </update>

</mapper>